<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Add_User_to_Collection</name>
        <label>Add User to Collection</label>
        <locationX>801</locationX>
        <locationY>870</locationY>
        <assignmentItems>
            <assignToReference>var_UserCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_User</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>var_AdminEmailList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>txt_emailList</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varAdminProductOwnerList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>txt_emailList</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Members</targetReference>
        </connector>
    </assignments>
    <description>Run this as subflow to get a list of the admins in the system and return a comma separated list. 
This version adds a list that includes the product owner as an option.</description>
    <environments>Default</environments>
    <interviewLabel>get Admins Group {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Users Admins Email List</label>
    <loops>
        <name>Loop_Through_Members</name>
        <label>Loop Through Members</label>
        <locationX>1292</locationX>
        <locationY>678</locationY>
        <collectionReference>Get_Group_Members</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_User</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Group</name>
        <label>Get Group</label>
        <locationX>1402</locationX>
        <locationY>258</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Admins</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Members</name>
        <label>Get Group Members</label>
        <locationX>1404</locationX>
        <locationY>444</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Through_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User</name>
        <label>Get User</label>
        <locationX>800</locationX>
        <locationY>665</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_User_to_Collection</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Through_Members.UserOrGroupId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1296</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>Get_Group</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>txt_emailList</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!Get_User.Email},</text>
    </textTemplates>
    <variables>
        <description>This is a comma separated list of</description>
        <name>var_AdminEmailList</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>salesforce.sc@soprasteria.com,</stringValue>
        </value>
    </variables>
    <variables>
        <name>var_UserCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
    <variables>
        <description>List with admins and product owner</description>
        <name>varAdminProductOwnerList</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>e.heidenstrom@soprasteria.com,</stringValue>
        </value>
    </variables>
</Flow>
